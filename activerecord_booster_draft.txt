CREATE TABLE lines (
    id     integer CONSTRAINT no_null NOT NULL,
    name   varchar(40) NOT NULL
    lines     integer
);


ha activerecordban egy table create van akkor pl users

INSERT INTO lines VALUES ('users', 0);
CREATE TRIGGER users_insert AFTER INSERT ON users FOR EACH ROW EXECUTE PROCEDURE update_table_size_plus(users);
CREATE TRIGGER users_insert AFTER DELETE ON users FOR EACH ROW EXECUTE PROCEDURE update_table_size_minus(users);

tarolt eljarasok

CREATE OR REPLACE FUNCTION update_table_size_plus(tablename varchar)


DECLARE
  counter RECORD;
BEGIN
  SELECT lines INTO counter FROM lines WHERE name = tablename;
  counter=counter+1;
  UPDATE lines SET lines = counter WHERE name =tablename;
END;

---

CREATE OR REPLACE FUNCTION update_table_size_minus(tablename varchar)

DECLARE
  counter RECORD;
BEGIN
  SELECT lines INTO counter FROM lines WHERE name = tablename;
  IF counter <> 0 THEN
    counter=counter-1;
    UPDATE lines SET lines = counter WHERE name =tablename;
  END IF;
END;

---

ha Find van akkor nem count(*) fut le hanem SELECT lines FROM lines where name=tablename;
ez __lehet___ h javitana az 50% os performance csokkenesen ami az AR
insert/delete kritikus tablan of korz nem hasznalhato 

-tranzakciokezeles kell a +- hoz
-nem tom holeza retekaz AR kodban
